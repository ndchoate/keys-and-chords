import java.awt.*;
import javax.swing.*;

import javax.swing.border.Border;
import java.io.File;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vstqo8
 */
public class KeysAndChordsUI extends javax.swing.JFrame {

    /**
     * Creates new form KeysAndChordsUI
     */
    public KeysAndChordsUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        keyComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(925, 900));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Keys and Chords Referencer");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(330, 10, 270, 22);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Select a Key: ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 51, 83, 17);

        keyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Key", "C", "G", "D", "A", "E", "B(H)", "Gb/F#", "Db", "Ab", "Eb", "Bb", "F" }));
        keyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(keyComboBox);
        keyComboBox.setBounds(103, 51, 100, 20);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Chord Progression: ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 89, 122, 17);

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(810, 120, 90, 90);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("III");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(830, 210, 50, 29);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("#");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(230, 340, 10, 17);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("#");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(230, 740, 10, 17);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("#");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(230, 440, 10, 17);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("#");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(230, 540, 10, 17);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("#");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(230, 640, 10, 17);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("I");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(30, 210, 50, 29);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 120, 90, 90);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("ii");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(130, 210, 50, 29);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(110, 120, 90, 90);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("iii");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(230, 210, 50, 29);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(210, 120, 90, 90);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("IV");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(330, 210, 50, 29);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(310, 120, 90, 90);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("V");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(430, 210, 50, 29);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(410, 120, 90, 90);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("II");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(730, 210, 50, 29);

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(710, 120, 90, 90);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("vi");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(530, 210, 50, 29);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(510, 120, 90, 90);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("vii");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(630, 210, 50, 29);

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(610, 120, 90, 90);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[8];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void keyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyComboBoxActionPerformed
        String selectedKeyName = (String)keyComboBox.getSelectedItem();
        
        // Handle case if "Select a Key" option is selected.
        if (selectedKeyName.length() > 5)
        {
            return;
        }
        KeysAndChordsUIModel.initKeysMap();
        this.selectedKey = KeysAndChordsUIModel.keysMap.get(selectedKeyName);
        Chord[] chordsOfKeyArray = this.selectedKey.chordsOfKeyArray;
        setButtonsBasedOnKey(chordsOfKeyArray);
    }//GEN-LAST:event_keyComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[0];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[1];
        this.setChordPanel(this.selectedChord);
        refreshFrame();    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[2];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[3];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[4];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[7];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[5];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.selectedChord = this.selectedKey.chordsOfKeyArray[6];
        this.setChordPanel(this.selectedChord);
        refreshFrame();
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KeysAndChordsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KeysAndChordsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KeysAndChordsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeysAndChordsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                KeysAndChordsUI KeysAndChordsFrame = new KeysAndChordsUI();
                KeysAndChordsFrame.setVisible(true);
                KeysAndChordsFrame.initGuitarChordDisplay();
                KeysAndChordsFrame.initMutedStringLabels();
                KeysAndChordsFrame.initStringNameLabels();
                KeysAndChordsFrame.initFretLabelArray();
                KeysAndChordsFrame.initButtonsArray();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> keyComboBox;
    // End of variables declaration//GEN-END:variables

    // arrays to contain references to non-static JComponents
    private JButton[] buttonsArray = {jButton1, jButton2, jButton3,
                                     jButton4, jButton5, jButton6,
                                     jButton7, jButton8, jButton9};
    private ImagePanel[][] chordPanelsArray = new ImagePanel[6][5];
    private JLabel[] openOrMutedLabelsArray = new JLabel[6];
    private JLabel[] fretLabelsArray = new JLabel[5];
    
    // define selected Key
    private Key selectedKey;
    
    // define selected Chord
    private Chord selectedChord;
    
    // define sizes for panels
    int chordPanelWidth = 69;
    int chordPanelHeight = 100;
    int allChordsPanelWidth = 420; // chordPanelWidth * 6 + 10 (2 horizontal gaps)
    int allChordsPanelHeight = 505; // chordPanelHeight * 5 + 10 (2 vertical gaps)
    int verticalGap = 5;
    int horizontalGap = 5;
    
    // x and y coords for chord panels to be incremented and reset for positioning
    int chordPanelXPos = 0;
    int chordPanelYPos = 0;
    
    public void initGuitarChordDisplay()
    {
        // build borders for panels and overall panel
        Border lineBorder = BorderFactory.createLineBorder(new Color(240, 240, 240));
        Border matteBorder = BorderFactory.createMatteBorder(1, 0, 1, 0, Color.BLACK);
        
        // create panel for chord panels
        JPanel allChordsPanel = new JPanel();
        allChordsPanel.setLocation(243, 300);
        allChordsPanel.setBorder(lineBorder);
        allChordsPanel.setSize(allChordsPanelWidth, allChordsPanelHeight);
        this.add(allChordsPanel);
        
        allChordsPanel.setLayout(new GridLayout(5,6));
        
        // build chord panels
        for (int i = 0; i < 5; i++)
        {
            for (int j = 0; j < 6; j++)
            {
                ImagePanel chordPanel;
                
                chordPanel = new ImagePanel(new ImageIcon("open_string.png").getImage());
                chordPanel.setSize(chordPanelWidth, chordPanelHeight);
                chordPanel.setBorder(matteBorder);
                allChordsPanel.add(chordPanel);
                chordPanel.setLocation(chordPanelXPos, chordPanelYPos);
                chordPanel.xPos = chordPanelXPos;
                chordPanel.yPos = chordPanelYPos;
                chordPanelsArray[j][i] = chordPanel;
                
                chordPanelXPos += chordPanelWidth;
            }
            
            chordPanelYPos += chordPanelHeight;
            chordPanelXPos = 0;
        }
    }
    // Initialize labels for the muted status of the strings.
    // Placed above the allChordsPanel, directly above each string.
    public void initMutedStringLabels()
    {
        int stringXPosIncrement = chordPanelWidth;
        int stringXPos = 271;
        int mutedLabelsYPos = 255;
        for (int i = 0; i < 6; i++)
        {
            JLabel mutedStringLabel = new JLabel();
            mutedStringLabel.setFont(new java.awt.Font("Tahoma", 0, 30));
            mutedStringLabel.setText("X");
            getContentPane().add(mutedStringLabel);
            mutedStringLabel.setBounds(stringXPos, mutedLabelsYPos, 50, 50);
            openOrMutedLabelsArray[i] = mutedStringLabel;
            stringXPos += stringXPosIncrement;
        }
    }
    
    // Initialize String Name labels, underneath the allChordsPanel
    // panel, each directly underneath their corresponding string.
    public void initStringNameLabels()
    {
        int stringXPosIncrement = chordPanelWidth;
        int stringXPos = 276;
        int stringNamesLabelsYPos = 790;
        
        for(int i = 0; i < 6; i++)
        {
            JLabel stringNameLabel = new JLabel();
            stringNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18));
            getContentPane().add(stringNameLabel);
            stringNameLabel.setBounds(stringXPos, stringNamesLabelsYPos, 50, 50);
            
            if (i == 0 || i == 5)
            {
                stringNameLabel.setText("E");
            }
            else if (i == 1)
            {
                stringNameLabel.setText("A");
            }
            else if (i == 2)
            {
                stringNameLabel.setText("D");
            }
            else if (i == 3)
            {
                stringNameLabel.setText("G");
            }
            else 
            {
                stringNameLabel.setText("B");
            }
            
            stringXPos += stringXPosIncrement;
        }
    }
    
    public void initFretLabelArray()
    {
        fretLabelsArray[0] = jLabel13;
        fretLabelsArray[1] = jLabel14;
        fretLabelsArray[2] = jLabel15;
        fretLabelsArray[3] = jLabel16;
        fretLabelsArray[4] = jLabel17;
    }
    
    public void initButtonsArray()
    {
        buttonsArray[0] = jButton1;
        buttonsArray[1] = jButton2;
        buttonsArray[2] = jButton3;
        buttonsArray[3] = jButton4;
        buttonsArray[4] = jButton5;
        buttonsArray[5] = jButton6;
        buttonsArray[6] = jButton7;
        buttonsArray[7] = jButton8;
        buttonsArray[8] = jButton9;
    }
    
    public void setChordPanel(Chord selectedChord)
    {
        resetChordDisplay();
        int startingFret = selectedChord.startingFret - 1;
        
        // Set Chord Panel images
        for (int i = 0; i < selectedChord.stringFrets.length; i++)
        {
            int fretOnString = selectedChord.stringFrets[i];
            if (fretOnString != 0)
            {
                // Set fret image to image of finger on string. X-index will
                // always be 0-5, Y-index is Fret on string - startingFret
                // lowered by 1 to get actual index.
                int yIndex = (fretOnString - startingFret) - 1;
                chordPanelsArray[i][yIndex].img = 
                        new ImageIcon("finger_on_string.png").getImage();
            }
        }
        
        // Set Muted String Labels
        for (int i = 0; i < openOrMutedLabelsArray.length; i++)
        {
            openOrMutedLabelsArray[i].setText(selectedChord.mutedStrings[i] + "");
        }
        
        // Set Fret Labels
        int fretNumber = selectedChord.startingFret;
        for (int i = 0; i < fretLabelsArray.length; i++)
        {
            fretLabelsArray[i].setText(fretNumber + "");
            fretNumber++;
        }
    }
    
    public void resetChordDisplay()
    {
        for (int i = 0; i < 5; i++)
        {
            for (int j = 0; j < 6; j++)
            {
               this.chordPanelsArray[j][i].img = 
                        new ImageIcon("open_string.png").getImage(); 
            }
        }
    }
    
    public void refreshFrame()
    {
        this.invalidate();
        this.validate();
        this.repaint();
    }
    
    public void setButtonsBasedOnKey(Chord[] chordsOfKeyArray)
    {
        for (int i = 0; i < buttonsArray.length; i++)
        {
            Chord chordAtIndex = chordsOfKeyArray[i];
            buttonsArray[i].setText(chordAtIndex.name);
        }
    }
}

// Extension to the JPanel class, the ImagePanel class makes changing the
// background image of a panel much simpler. To change the image, simply
// set this.img = new ImageIcon(...).
class ImagePanel extends JPanel {
    
  public Image img;
  public int xPos;
  public int yPos;

  public ImagePanel(String img) {
    this(new ImageIcon(img).getImage());
  }

  public ImagePanel(Image img) {
    this.img = img;
    //Dimension size = new Dimension(img.getWidth(null), img.getHeight(null));
    //setPreferredSize(size);
    //setMinimumSize(size);
    //setMaximumSize(size);
    //setSize(size);
    setLayout(null);
  }

  @Override
  public void paintComponent(Graphics g) {
    KeysAndChordsUI uiInstance = new KeysAndChordsUI();
    g.drawImage(img, 0, 0, 
                uiInstance.chordPanelWidth, uiInstance.chordPanelHeight, null);
    
    super.paintComponents(g);
  }

}
